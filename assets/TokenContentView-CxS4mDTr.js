import{m as y}from"./marked-CSV-5BXG.js";import{d as w,u as v,i as $,r as b,n as g,w as x,j as t,o as n,c as o,t as P,a as T,l as j,H as B}from"./index-BsCo9RwT.js";import{u as C}from"./useQuery-oHZOrjAP.js";import{b as u}from"./base-url-qR72hEjy.js";import{u as E}from"./api-C-r42jVZ.js";const H={key:0},I={key:1},V={key:2,class:"flex w-full justify-center p-4 bg-white"},q=["innerHTML"],D=w({__name:"TokenContentView",setup(A){const{fetchAPI:a}=E(),{locale:p}=v(),r=$(),c=b(""),m=async()=>{const e=await a(`${u}/artisan_tokens/${r.params.id}`).then(s=>s.json()),i=e.path,k=await a(`${u}/${i}`).then(s=>s.text());return c.value=k,e},{isPending:l,isError:d,isSuccess:_,error:f}=C({queryKey:[`artisan_tokens:${r.params.id}`],queryFn:m}),h=g(()=>y.parse(c.value));return x(p,e=>{B.replace({path:"/tokens"})}),(e,i)=>t(l)?(n(),o("div",H," Pending ")):t(d)?(n(),o("span",I,"Error: "+P(t(f)),1)):t(_)?(n(),o("div",V,[T("div",{class:"content markdown-body w-8/12",innerHTML:h.value},null,8,q)])):j("",!0)}});export{D as default};
