import{m as y}from"./marked-CSV-5BXG.js";import{d as w,u as v,i as $,r as b,E as g,w as x,j as t,o,c as n,t as E,a as P,l as T,G as j}from"./index-CKCquulN.js";import{u as B}from"./useQuery-C30FIoSE.js";import{b as u}from"./base-url-qR72hEjy.js";import{u as C}from"./api-Qb9Iw1Km.js";const I={key:0},V={key:1},q={key:2,class:"flex w-full justify-center p-4 bg-white"},A=["innerHTML"],D=w({__name:"TokenContentView",setup(F){const{fetchAPI:a}=C(),{locale:p}=v(),r=$(),c=b(""),m=async()=>{const e=await a(`${u}/artisan_tokens/${r.params.id}`).then(s=>s.json()),i=e.path,k=await a(`${u}/${i}`).then(s=>s.text());return c.value=k,e},{isPending:l,isError:d,isSuccess:_,error:f}=B({queryKey:[`artisan_tokens:${r.params.id}`],queryFn:m}),h=g(()=>y.parse(c.value));return x(p,e=>{j.replace({path:"/tokens"})}),(e,i)=>t(l)?(o(),n("div",I," Pending ")):t(d)?(o(),n("span",V,"Error: "+E(t(f)),1)):t(_)?(o(),n("div",q,[P("div",{class:"content markdown-body w-8/12",innerHTML:h.value},null,8,A)])):T("",!0)}});export{D as default};
